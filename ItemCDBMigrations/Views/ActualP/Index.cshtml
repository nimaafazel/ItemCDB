@model PagedList.IPagedList<ItemCDBMigrations.Models.tblPOSITIONACTUAL>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" type="text/css" rel="stylesheet" />

@{
    ViewBag.Title = "Index";
}

<h2>Actual Position Search</h2>
<p>
    @Html.ActionLink("Create New Actual Position", "Create")
</p>

@using (Html.BeginForm("Index", "ActualP", FormMethod.Get))
{
    <p> Item or Name: 
        @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p> 
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model[0].tblEMPLOYEELIST.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].tblEMPLOYEELIST.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].tblPOSITIONBUDGETED.BudItemNum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].ActItemNum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].ActSubItem)
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.EffectiveDate)*@
            @Html.ActionLink("Effective Date", "Index", new { currentFilter = ViewBag.CurrentFilter, sortOrder = ViewBag.EffectiveDate })
        </th>
        <th>
            @Html.DisplayName("Budgeted Position Number")
        </th>        
        <th>
            @*@Html.DisplayNameFor(model => model.tblEmploymentType.EmplTypeDesc)*@
            @Html.ActionLink("Employment Type", "Index", new { currentFilter = ViewBag.CurrentFilter, sortOrder = ViewBag.EmplType })
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].tblPayPeriod.PayTypeDesc)
        </th>        
        <th>
            @Html.DisplayNameFor(model => model[0].tblStep.Step)
        </th>        
        <th>
            @Html.DisplayNameFor(model => model[0].DeptHireDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].tblEMPLOYEELIST.tblEmplStatu.EmplStatusDesc)
        </th>        
        <th>
            @Html.DisplayNameFor(model => model[0].PayRate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].PreItemNum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].PreSubItem)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].ReasonOfChange)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Comments)
        </th>        
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.tblEMPLOYEELIST.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tblEMPLOYEELIST.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tblPOSITIONBUDGETED.BudItemNum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActItemNum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActSubItem)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EffectiveDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tblPOSITIONBUDGETED.BudPosNum)
        </td>        
        <td>
            @Html.DisplayFor(modelItem => item.tblEmploymentType.EmplTypeDesc)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tblPayPeriod.PayTypeDesc)
        </td>        
        <td>
            @Html.DisplayFor(modelItem => item.tblStep.Step)
        </td>        
        <td>
            @Html.DisplayFor(modelItem => item.DeptHireDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tblEMPLOYEELIST.tblEmplStatu.EmplStatusDesc)
        </td>        
        <td>
            @Html.DisplayFor(modelItem => item.PayRate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PreItemNum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PreSubItem)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReasonOfChange)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Comments)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ActPosAutoID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ActPosAutoID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ActPosAutoID })
        </td>
    </tr>
}

</table>

@if(Model != null && Model.TotalItemCount > 0)
{
    <h4>@Model.TotalItemCount Records found</h4>
    if (Model.TotalItemCount > Model.PageSize)
    {
        <div>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    }
}
